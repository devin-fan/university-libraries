  [1m[36mActiveRecord::SchemaMigration Load (2.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (109.1ms)[0m  [1mDROP DATABASE IF EXISTS "video_db_test"[0m
  [1m[35m (366.6ms)[0m  CREATE DATABASE "video_db_test" ENCODING = 'unicode'
  [1m[36mSQL (0.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (6.8ms)[0m  CREATE TABLE "film_tags" ("id" serial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "film_id" integer, "tag_id" integer) 
  [1m[36m (5.0ms)[0m  [1mCREATE TABLE "films" ("id" serial primary key, "title" character varying, "film_type" integer, "director" character varying, "film_path" character varying, "essay_path" character varying, "permission" integer, "description" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "base_film_path" character varying, "user_id" integer, "image_path" character varying) [0m
  [1m[35m (6.1ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "trigrams" ("id" serial primary key, "trigram" character varying(3), "score" smallint, "owner_id" integer, "owner_type" character varying, "fuzzy_field" character varying) [0m
  [1m[35m (2.2ms)[0m  CREATE  INDEX  "index_for_match" ON "trigrams" USING btree ("owner_id", "owner_type", "fuzzy_field", "trigram", "score")
  [1m[36m (2.2ms)[0m  [1mCREATE  INDEX  "index_by_owner" ON "trigrams" USING btree ("owner_id", "owner_type")[0m
  [1m[35m (5.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "role" integer, "first_name" character varying, "last_name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "andrewid" character varying, "password_digest" character varying) 
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (2.6ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.2ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180430182306')
  [1m[36m (0.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20180416014542')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180318183121')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20180413000414')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180426033142')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20180403161925')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180320203320')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20180402050925')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180327040507')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20180419043330')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20180320203150')
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
